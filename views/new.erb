<!-- # GO Visualizer is  released under the terms of the GNU Lesser General Public License Ver.2.1. 
# https://www.gnu.org/licenses/old-licenses/lgpl-2.1.en.html
-->

<html>
<head>
<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js"></script>
 <script src="//netdna.bootstrapcdn.com/bootstrap/3.0.3/js/bootstrap.min.js"></script>
   		<script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.8.17/jquery-ui.min.js"></script>
		<link rel="stylesheet" href="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8.17/themes/smoothness/jquery-ui.css" />
        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.0.3/css/bootstrap.min.css">
        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.0.3/css/bootstrap-theme.min.css">
        <script language="javascript" type="text/javascript" src="js/rainbow.js"></script>
		

    <script type="text/javascript" src="js/chroma.min.js"></script>
    
    <script src="http://d3js.org/d3.v3.min.js"></script>
	<!--<script src="http://cpettitt.github.io/project/dagre-d3/latest/dagre-d3.min.js"></script>-->
	<script language="javascript" type="text/javascript" src="js/dagre-d3.min.js"></script>
    <script language="javascript" type="text/javascript" src="js/cytoscape/build/cytoscape.min.js"></script>
    
    <script type="text/javascript">
    
    
    //Show UCLA CS class dependencies (not complete)

    </script>
    <style type="text/css">
      body {
      overflow: auto;
      }
      #header {
		background: #333;
		height: 35px;
		-webkit-box-shadow: 0 2px 3px rgba(0,0,0,.25);
		-moz-box-shadow: 0 2px 3px rgba(0,0,0,.25);
		box-shadow: 0 2px 3px rgba(0,0,0,.25);
		text-align: center;
		position: absolute;
		left: 0;
		width: 100%;
		
		color: white;
		}
		#search-txt{
		border-radius:5px;
		height:25px;
		margin-top:5px;
		}
		#settings {
		display:block;
		position: absolute;
		width: 200px;
		right: 20px;
		top: 0px;
		overflow-y: auto;
		}
		#settings > label {
		clear: both;
		float: left;
		margin-top: 6px;
		margin-right: 10px;
		width: 107px;
		}
		.settings-box {
		
		width: 100%;
		float: left;
		}
		svg {
	  		overflow: hidden;
	  		width:100%;
	  		height:100%;
		}

		text {
		  font-weight: 300;
		  font-family: "Helvetica Neue", Helvetica, Arial, sans-serf;
		  font-size: 14px;
		  cursor:pointer;
		}

		.node{
		  stroke: #333;
		  stroke-width: 2px;
		  fill: #fff;
		  cursor:pointer;
		}

		.edgeLabel rect {
			  fill: #fff;
		}

		.edgePath path {
		  stroke: #333;
		  stroke-width: 1.5px;
		  fill: none;
		}
		.status{
			color:#FFB300;
		}
		body { 
		  font: 14px helvetica neue, helvetica, arial, sans-serif;
		}
		
		#cy {
		  height: 100%;
		  width: 100%;
		  position: absolute;
		  left: 0;
		  top: 0;
		}
		
		#info {
		  color: #c88;
		  font-size: 1em;
		  position: absolute;
		  z-index: -1;
		  left: 1em;
		  top: 1em;
		}
    </style>
</head>
<body>
<div id="cy"></div>

<div id="settings">
  <h3>Information</h3>
  <label class="status">
  </label><br><br>
  <input type="checkbox" class="simple-relationship" name="" value="">Only show children when expanded<br>
  <label>
  <i style="margin-top:3px" class="glyphicon glyphicon-info-sign"></i>
  go_term id:
  </label>
  <input type="text" class="form-control settings-box" id="go-id">
  <label>
  
  <i style="margin-top:3px" class="glyphicon glyphicon-info-sign"></i>
  name:
  </label>
  <input type="text" class="form-control settings-box" id="go-name">
  
  <label>
  Test Upload:
  </label>
  <textarea style="margin-top:10px" class="form-control" id="submit-txt"></textarea>
  
  <button style="margin-top:10px" class="btn btn-default btn-primary" id="match-path-btn">Path Only</button>
  <button style="margin-top:10px" class="btn btn-default btn-primary" id="match-path-score-btn">Color Score</button>
  
  <br>
  <button style="margin-top:10px" class="btn btn-default btn-primary" id="match-path-score2-btn">Score Submit</button>
  <button style="margin-top:10px" class="btn btn-default" id="reset-btn">Reset All</button>
	<br>
	<h3>Graph Direction</h3>
	<button style="margin-top:10px" class="btn btn-default" id="rotate">Top-Down Graph</button>
	<button style="margin-top:10px" class="btn btn-default" id="rotate-back">Left-Right Graph</button>
</div>
<script>
$(function(){ // on dom ready
 $.get("http://kiharalab.org/web/visualizer.php?job_id=36967_",function(data){
	       //console.log(data);
	       parser=new DOMParser();
			var esg = 0;
			xmlDoc=parser.parseFromString(data,"text/xml");
			
			x=xmlDoc.getElementsByTagName("GO_TERM");
			y=xmlDoc.getElementsByTagName("normalized_raw_score");
			z=xmlDoc.getElementsByTagName("category");
			
			//esg xml option
			//different tags names for xml file of esg
			if(x.length == 0){
				
				x=xmlDoc.getElementsByTagName("term");
				y=xmlDoc.getElementsByTagName("probability");
				z=xmlDoc.getElementsByTagName("type");
				esg = 1;
			}
			
			var graph_node_num = 0;
			
			//redener only MF branch first
			//User can switch branches by using the tabs provided
			//console.log(y.length + " "+ z.length);	
			var cutoff_max = 100;
			if(y.length < cutoff_max)cutoff_max = y.length;
			
			for (var i = 0; i < y.length; i++) {
			   //console.log(y[i]);
			   if(esg == 0){
					if(z[i].firstChild.nodeValue != "f")continue;
			   }
			   else{
					//console.log(y[i].firstChild.nodeValue+" "+z[i].firstChild.nodeValue);

					if(z[i].firstChild.nodeValue != "MF")continue;

			   }
			   //ignore the probability smaller than 5%
			   if(y[i].firstChild.nodeValue < 0.05 && esg == 1)continue;
			   if(y[i].firstChild.nodeValue < 0.10 && esg == 0)continue;
			   var node = x[i].firstChild.nodeValue;
			   var prev = $("#submit-txt").text();
			   //console.log(node);
			   prev += node;
			   prev += " ";
			   if(y[i].firstChild.nodeValue.length>5){
			   prev += y[i].firstChild.nodeValue.substring(0,5);}
			   else prev += y[i].firstChild.nodeValue;
			   prev += '\n';
			   graph_node_num += 1;
			   //console.log(node+" "+ y[i].firstChild.nodeValue);
			   $("#submit-txt").text(prev);
			}  
			//var r = confirm("The graph will take some time to render please wait...");
			//if(r == true){
			
			//trigger the event 
			if($("#submit-txt").text().length > 0){
				$('#overlay, #overlay-back').fadeIn(500);
				$(".status").text("rendering graph...");
				$('.status').change();
				$( "#match-path-score-btn" ).trigger( "click" );
				//}
				
				//make the edge length longger if number of predicted terms is larger than 50
				if(graph_node_num > 50)layout = dagreD3.layout()
	                    .nodeSep(10).rankSep(200)
	                    .rankDir("TD");
                    
            }else{
				alert("Empty prediction list!");
			}
           
        });
        
        
        
$('#cy').cytoscape({
  style: cytoscape.stylesheet()
    .selector('node')
      .css({
        'content': 'data(name)',
        'text-valign': 'center',
        'color': 'white',
        'text-outline-width': 2,
        'text-outline-color': '#888'
      })
    .selector('edge')
      .css({
        'target-arrow-shape': 'triangle'
      })
    .selector(':selected')
      .css({
        'background-color': 'black',
        'line-color': 'black',
        'target-arrow-color': 'black',
        'source-arrow-color': 'black'
      })
    .selector('.faded')
      .css({
        'opacity': 0.25,
        'text-opacity': 0
      }),
  
  elements: {
    nodes: [
      { data: { id: 'j', name: 'Jerry' } },
      { data: { id: 'e', name: 'Elaine' } },
      { data: { id: 'k', name: 'Kramer' } },
      { data: { id: 'g', name: 'George' } }
    ],
    edges: [
      { data: { source: 'j', target: 'e' } },
      { data: { source: 'j', target: 'k' } },
      { data: { source: 'j', target: 'g' } },
      { data: { source: 'e', target: 'j' } },
      { data: { source: 'e', target: 'k' } },
      { data: { source: 'k', target: 'j' } },
      { data: { source: 'k', target: 'e' } },
      { data: { source: 'k', target: 'g' } },
      { data: { source: 'g', target: 'j' } }
    ]
  },
  
  layout: {
    name: 'grid',
    padding: 10
  },
  
  ready: function(){
    window.cy = this;
    
    // giddy up...
    
    cy.elements().unselectify();
    
    cy.on('tap', 'node', function(e){
      var node = e.cyTarget; 
      var neighborhood = node.neighborhood().add(node);
      
      cy.elements().addClass('faded');
      neighborhood.removeClass('faded');
    });
    
    cy.on('tap', function(e){
      if( e.cyTarget === cy ){
        cy.elements().removeClass('faded');
      }
    });
  }
});

}); // on dom ready

</script>
</body>

</html>
